<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="767,8410" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bem1="clr-namespace:BalaReva.Excel.Merge;assembly=BalaReva.Excel" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:bes1="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>BalaReva.Excel.Sheets</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>BalaReva.Excel.WorkBook</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.Excel.Enums</x:String>
      <x:String>BalaReva.Excel.Merge</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="41">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="777,8345" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtBankDetails" />
      <Variable x:TypeArguments="x:String" Name="strDateAndTime" />
      <Variable x:TypeArguments="x:Int32" Name="intRowCount" />
      <Variable x:TypeArguments="x:String" Name="strDataFolderPath" />
      <Variable x:TypeArguments="x:String" Default="[ENCRYPTED] attachments" Name="strAttachmentName" />
      <Variable x:TypeArguments="x:String" Name="strBankName" />
      <Variable x:TypeArguments="s:String[]" Name="ArrBankName" />
      <Variable x:TypeArguments="x:String" Name="strDate" />
      <Variable x:TypeArguments="x:String" Name="strFromFullDate" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="RegstrToFullDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFinal" />
      <Variable x:TypeArguments="x:Int32" Name="IntCount" />
      <Variable x:TypeArguments="x:String" Name="strFileSaveDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPayable" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtReceivable" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtNotAccess" />
      <Variable x:TypeArguments="si:FileInfo" Name="OutFile" />
      <Variable x:TypeArguments="x:String" Name="strDayToday" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="735,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="InitAllSettings.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">D:\Treasury\GetBankBalances\Data\Config.xlsx</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="735,51" sap2010:WorkflowViewState.IdRef="CommentOut_15">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_61">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoginForm workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="LoginForm.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="735,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="CHROME" />
    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="735,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strBankName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config("BankNames").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[ArrBankName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Split(strBankName,",")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strDateAndTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd-MM-yyyy__hh-mm-ss")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("MM/dd/yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_22">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strDayToday]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.DayOfWeek.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strFileSaveDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd.MM.yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strDataFolderPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config("DataFolderPath").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="735,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[strDataFolderPath + strDateAndTime]" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="735,498" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[Config(&quot;TemplatesPath&quot;).ToString + &quot;Bank.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="487,389" sap2010:WorkflowViewState.IdRef="Sequence_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelCopySheet DestinationFilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" DestinationSheetName="Master" DisplayName="Copy Sheet" sap:VirtualizedContainerService.HintSize="445,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="Sheet1" />
            <bes:DeleteSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Delete Sheet" FilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="DeleteSheet_1" SheetName="Sheet1" />
            <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="RenameSheet_1" NewSheetName="Sheet1" SheetName="Master" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="718,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,1269" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1177" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1068" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Sheet1" Text="Serial /No" />
                  <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="BankName" />
                  <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sheet1" Text="AccountNumber" />
                  <ui:ExcelWriteCell Cell="D1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="CurrentBalance" />
                  <ui:ExcelWriteCell Cell="E1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="ClosingBalance" />
                  <ui:ExcelWriteCell Cell="F1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet1" Text="UnrealizedBalance" />
                  <ui:ExcelWriteCell Cell="G1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="Unable to Get Balance" />
                  <ui:ExcelWriteCell Cell="H1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet1" Text="Payable/Receivable" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtBankDetails]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="735,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetWorkingDays workflow" sap:VirtualizedContainerService.HintSize="735,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="GetWorkingDays.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="In_strExcelFilePath">[Config("InputFolderPath").ToString + "Holidays.xlsx"]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDate">[strDate]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_strDate">[strFromFullDate]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDayToday">[strDayToday]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:Matches sap:VirtualizedContainerService.HintSize="735,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[convert.toDateTime(strDate).addDays(-1).tostring]" IsBuilderTabModified="False" Pattern="(?&lt;=)(.*)(?= )" RegexOption="IgnoreCase, Compiled" Result="[RegstrToFullDate]" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="735,1607" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ArrBankName]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="bankName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1473" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[bankName.ToString = &quot;BOC&quot;]" DisplayName="If - BOC" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetBOCDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Banks\GetBOCDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;CITI&quot;]" DisplayName="If-  CITI" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="392,356" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCITIDetails workflow" sap:VirtualizedContainerService.HintSize="350,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Banks\GetCITIDetails.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strAttachmentName">[strAttachmentName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strAttachmentSavingPath">[Config("InputFolderPath").ToString + "BankDOC"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">[Config("AttachmentMailAddress").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingFolderName">CITIAvailable</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCITIDetailsPreviousTrancastion workflow" sap:VirtualizedContainerService.HintSize="350,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Banks\GetCITIDetailsPreviousTrancastion.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strAttachmentName">[strAttachmentName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strAttachmentSavingPath">[Config("InputFolderPath").ToString + "BankDOC"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">[Config("AttachmentMailAddress").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingFolderName">CITIPrevious</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;Commercial&quot;]" DisplayName="If - COM" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCommercialBankDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Banks\GetCommercialDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_1421111101_Previous Transaction.xls"]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;Deutsche&quot;]" DisplayName="If - Deutsche" sap:VirtualizedContainerService.HintSize="484,289" sap2010:WorkflowViewState.IdRef="If_24">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetDeutscheBankDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Banks\GetDeutscheBankDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="bankName.ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strDataFolderPath" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strDateAndTime" />
                    </InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">
                      <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dtBankDetails" />
                    </InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">
                      <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="intRowCount" />
                    </InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strAttachmentSavingPath">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;InputFolderPath&quot;).ToString + &quot;BankDOC&quot;" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;AttachmentMailAddress&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingFolderName">
                      <Literal x:TypeArguments="x:String">DeutscheBank</Literal>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;DFCC&quot;]" DisplayName="If - DFCC" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetDFCCDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Banks\GetDFCCDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_019001002270_Previous Transaction.xlsx"]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;HNB&quot;]" DisplayName="If - HNB" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetHNBDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Banks\GetHNBDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;NDB&quot;]" DisplayName="If - NDB" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetNDBDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Banks\GetNDBDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_101110008668_Previous Transaction.csv"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;NSB&quot;]" DisplayName="If - NSB" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,295" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetNSBDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Banks\GetNSBDetails.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                      <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_100011028634_Previous Transaction"]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,531" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[strClosingBalance]" DataTable="[dtBankDetails]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
                        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[strDateAndTime]" DataTable="[dtBankDetails]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(0).Item("Date")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strDateAndTime]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(0).Item("ClosingBalance")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strClosingBalance]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtBankDetails]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" WorkbookPath="Data\BankDetails.xlsx" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;NTB&quot;]" DisplayName="If - NTB" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetNTBDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Banks\GetNTBDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;PB&quot;]" DisplayName="If - PB" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="891,1843" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="BoolDownloadedAttachments" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DownloadDocuments workflow" sap:VirtualizedContainerService.HintSize="849,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="DownloadDocuments.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingPath">[Config("InputFolderPath").ToString + "BankDOC"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strFolderName">PB</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">[Config("AttachmentMailAddress").ToString]</InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_BoolDownloadedAttachments">[BoolDownloadedAttachments]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[BoolDownloadedAttachments = True]" sap:VirtualizedContainerService.HintSize="849,1599" sap2010:WorkflowViewState.IdRef="If_21">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="604,1441" sap2010:WorkflowViewState.IdRef="Sequence_67">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,1230" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[directory.getfiles(Config(&quot;InputFolderPath&quot;).ToString + &quot;\BankDOC\&quot;)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1096" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="RegPB" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[item.ToString.StartsWith(Config(&quot;InputFolderPath&quot;).ToString + &quot;\BankDOC\SLTDB”)]" sap:VirtualizedContainerService.HintSize="484,482" sap2010:WorkflowViewState.IdRef="If_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,305" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[item.ToString]" />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetPBDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Banks\GetPBDetails.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_strTextFilePath">[item.ToString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <If Condition="[item.ToString.StartsWith(Config(&quot;InputFolderPath&quot;).ToString + &quot;\BankDOC\SLTTR”)]" sap:VirtualizedContainerService.HintSize="484,482" sap2010:WorkflowViewState.IdRef="If_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="421,305" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[item.ToString]" />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetPBPreviousTransactions workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="PreviousTransactions\GetPBPreviousTransactions.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_strTextFilePath">[item.ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\Previous Transaction.xlsx"]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="562,79" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[Config(&quot;InputFolderPath&quot;).ToString + &quot;BankDOC&quot;]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_68">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRow" Name="drBankName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drBankName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtBankDetails.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drBankName("BankName")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[bankName.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drBankName]" DataTable="[dtBankDetails]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(intRowCount).Item("Unable to Get Balance")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["PB - Attachments not downloaded"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtBankDetails]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intRowCount+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;Sampath&quot;]" DisplayName="If - Sampath" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,295" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetSampathBankDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Banks\GetSampathDetails.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                      <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_110069456_Previous Transaction"]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,531" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[strClosingBalance]" DataTable="[dtBankDetails]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[strDateAndTime]" DataTable="[dtBankDetails]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(0).Item("Date")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strDateAndTime]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(0).Item("ClosingBalance")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[strClosingBalance]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtBankDetails]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="Data\BankDetails.xlsx" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;SCB&quot;]" DisplayName="If - SCB" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="621,995" sap2010:WorkflowViewState.IdRef="Sequence_66">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="BoolDownloadedAttachments" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DownloadDocuments workflow" sap:VirtualizedContainerService.HintSize="579,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="DownloadDocuments.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingPath">[Config("InputFolderPath").ToString + "BankDOC"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strFolderName">SC</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">[Config("AttachmentMailAddress").ToString]</InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_BoolDownloadedAttachments">[BoolDownloadedAttachments]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[BoolDownloadedAttachments = True]" sap:VirtualizedContainerService.HintSize="579,270" sap2010:WorkflowViewState.IdRef="If_22">
                    <If.Then>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetSCDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Banks\GetSCDetails.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_strZIPFilePath">[Config("InputFolderPath").ToString + "BankDOC\"]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_69">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRow" Name="drBankName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drBankName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtBankDetails.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drBankName("BankName")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[bankName.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drBankName]" DataTable="[dtBankDetails]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dtBankDetails.Rows(intRowCount).Item("Unable to Get Balance")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["SCB - Attachments not downloaded"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtBankDetails]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intRowCount+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DownloadDocuments workflow" sap:VirtualizedContainerService.HintSize="579,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="DownloadDocuments.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strDocSavingPath">[Config("InputFolderPath").ToString + "BankDOC"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strFolderName">SCBPrevious</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="In_strMailAddress">[Config("AttachmentMailAddress").ToString]</InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_BoolDownloadedAttachments">[BoolDownloadedAttachments]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[BoolDownloadedAttachments = True]" sap:VirtualizedContainerService.HintSize="579,289" sap2010:WorkflowViewState.IdRef="If_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetSCBPreviousDetails workflow" sap:VirtualizedContainerService.HintSize="370,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="PreviousTransactions\GetSCBPreviousDetails.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="In_strZIPFilePath">[Config("InputFolderPath").ToString + "BankDOC\"]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_PreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\Previous Transaction.xlsx"]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[bankName.ToString = &quot;Seylan&quot;]" DisplayName="If - Seylan" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetSeylanBankDetails workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Banks\GetSeylanDetails.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_dtBankDetails">[dtBankDetails]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="InOut_intRowCount">[intRowCount]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strBankName">[bankName.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_DataFolderPath">[strDataFolderPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strFromFullDate">[strFromFullDate]</InArgument>
                    <InArgument x:TypeArguments="scg:IEnumerable(str:Match)" x:Key="In_RegstrToFullDate">[RegstrToFullDate]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_strPreviousTransactionFilePath">[strDataFolderPath + strDateAndTime + "\" + bankName.ToString + "_086000040404001_Previous Transaction.csv"]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <bes:RemoveDuplicates ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" CellRange="A1:H1000" Columns="[{4}]" ContinueOnError="False" Delay="3" DisplayName="Remove Duplicates" FilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" HasHeader="False" sap:VirtualizedContainerService.HintSize="735,70" sap2010:WorkflowViewState.IdRef="RemoveDuplicates_1" SheetName="Sheet1" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="718,51" sap2010:WorkflowViewState.IdRef="CommentOut_16">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,143" sap2010:WorkflowViewState.IdRef="Sequence_65">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelWriteCell Cell="I1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet1" Text="Excecution Date and Time" />
                  <ui:ExcelWriteCell Cell="J1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet1" Text="[DateTime.Now.ToString(&quot;dd-MM-yyyy  hh-mm-ss&quot;)]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ReadRange AddHeaders="True" DataTable="[dtFinal]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="718,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="A1" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="718,60" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">2</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="735,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1118,1208" sap2010:WorkflowViewState.IdRef="Sequence_49">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtFinal]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1076,1116" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1026,969" sap2010:WorkflowViewState.IdRef="Sequence_48">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="984,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[row(3).ToString]" />
                    <If Condition="[row(3).ToString.Equals(&quot;00000353&quot;) Or row(3).ToString.Equals(&quot;00000365&quot;) Or row(3).ToString.Equals(&quot;00000386&quot;) Or row(3).ToString.Equals(&quot;00000393&quot;) Or row(3).ToString.Equals(&quot;00000473&quot;) Or row(3).ToString.Equals(&quot;00000480&quot;) Or row(3).ToString.Equals(&quot;00000514&quot;) Or row(3).ToString.Equals(&quot;00000781&quot;) Or row(3).ToString.Equals(&quot;00000906&quot;) Or row(3).ToString.Equals(&quot;00032962&quot;) Or row(3).ToString.Equals(&quot;00402023&quot;) Or row(3).ToString.Equals(&quot;00605546&quot;) Or row(3).ToString.Equals(&quot;00713548&quot;) Or row(3).ToString.Equals(&quot;01015841&quot;) Or row(3).ToString.Equals(&quot;01865659&quot;) Or row(3).ToString.Equals(&quot;02067612&quot;) Or row(3).ToString.Equals(&quot;02367280&quot;) Or row(3).ToString.Equals(&quot;06952744&quot;) Or row(3).ToString.Equals(&quot;71362008&quot;) Or row(3).ToString.Equals(&quot;84664153&quot;) Or row(3).ToString.Equals(&quot;87066127&quot;) Or row(3).ToString.Equals(&quot;4100100209807&quot;) Or row(3).ToString.Equals(&quot;200254007&quot;) Or row(3).ToString.Equals(&quot;200254015&quot;) Or row(3).ToString.Equals(&quot;200254031&quot;) Or row(3).ToString.Equals(&quot;200254058&quot;) Or row(3).ToString.Equals(&quot;200254066&quot;) Or row(3).ToString.Equals(&quot;1030018258&quot;) Or row(3).ToString.Equals(&quot;1421318101&quot;)]" sap:VirtualizedContainerService.HintSize="984,676" sap2010:WorkflowViewState.IdRef="If_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_42">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Sheet1" Text="Payable" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:WriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" Text="Payable" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="563,519" sap2010:WorkflowViewState.IdRef="Sequence_47">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row(3).ToString.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="521,427" sap2010:WorkflowViewState.IdRef="If_15">
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelWriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Sheet1" Text="Receivable" />
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,330" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="334,83" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                              <ui:WriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" Text="Receivable" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="984,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[IntCount+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ReadRange AddHeaders="True" DataTable="[dtFinal]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="735,87" sap2010:WorkflowViewState.IdRef="ReadRange_6" Range="A1" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
    <ui:FilterDataTable DataTable="[dtFinal]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="735,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dtPayable]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Payable/Receivable"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["Payable"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[dtFinal]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="735,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dtReceivable]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Payable/Receivable"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["Receivable"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[dtFinal]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="735,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dtNotAccess]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Payable/Receivable"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="735,542" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtPayable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet1" StartingCell="A2" />
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtReceivable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Sheet1" StartingCell="[&quot;A&quot; + (dtPayable.Rows.Count+2).ToString]" />
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNotAccess]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Sheet1" StartingCell="[&quot;A&quot; + (dtPayable.Rows.Count+dtReceivable.Rows.Count+2).ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ReadRange AddHeaders="True" DataTable="[dtFinal]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="735,87" sap2010:WorkflowViewState.IdRef="ReadRange_5" Range="A1" SheetName="Sheet1" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">2</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="718,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1373,1205" sap2010:WorkflowViewState.IdRef="Sequence_59">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtFinal]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1331,1113" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1281,966" sap2010:WorkflowViewState.IdRef="Sequence_58">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[row(3).ToString.Equals(&quot;00000353&quot;) Or row(3).ToString.Equals(&quot;00000365&quot;) Or row(3).ToString.Equals(&quot;00000386&quot;) Or row(3).ToString.Equals(&quot;00000393&quot;) Or row(3).ToString.Equals(&quot;00000473&quot;) Or row(3).ToString.Equals(&quot;00000480&quot;) Or row(3).ToString.Equals(&quot;00000514&quot;) Or row(3).ToString.Equals(&quot;00000781&quot;) Or row(3).ToString.Equals(&quot;00000906&quot;) Or row(3).ToString.Equals(&quot;00032962&quot;) Or row(3).ToString.Equals(&quot;00402023&quot;) Or row(3).ToString.Equals(&quot;00605546&quot;) Or row(3).ToString.Equals(&quot;00713548&quot;) Or row(3).ToString.Equals(&quot;01015841&quot;) Or row(3).ToString.Equals(&quot;01865659&quot;) Or row(3).ToString.Equals(&quot;02067612&quot;) Or row(3).ToString.Equals(&quot;02367280&quot;) Or row(3).ToString.Equals(&quot;06952744&quot;) Or row(3).ToString.Equals(&quot;71362008&quot;) Or row(3).ToString.Equals(&quot;84664153&quot;) Or row(3).ToString.Equals(&quot;87066127&quot;) Or row(3).ToString.Equals(&quot;4100100209807&quot;) Or row(3).ToString.Equals(&quot;200254007&quot;) Or row(3).ToString.Equals(&quot;200254015&quot;) Or row(3).ToString.Equals(&quot;200254031&quot;) Or row(3).ToString.Equals(&quot;200254058&quot;) Or row(3).ToString.Equals(&quot;200254066&quot;) Or row(3).ToString.Equals(&quot;1030018258&quot;) Or row(3).ToString.Equals(&quot;1421318101&quot;)]" sap:VirtualizedContainerService.HintSize="1239,774" sap2010:WorkflowViewState.IdRef="If_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="369,368" sap2010:WorkflowViewState.IdRef="Sequence_51">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelSetRangeColor Color="[System.Drawing.Color.RosyBrown]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="327,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_4" Range="[&quot;A&quot;+IntCount.ToString+&quot;:H&quot; + IntCount.ToString]" SheetName="Sheet1" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="327,51" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:WriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Sheet1" Text="Payable" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="825,617" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row(3).ToString.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="783,525" sap2010:WorkflowViewState.IdRef="If_17">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="369,277" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelSetRangeColor Color="[System.Drawing.Color.LightPink]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="327,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_5" Range="[&quot;A&quot;+IntCount.ToString+&quot;:H&quot; + IntCount.ToString]" SheetName="Sheet1" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="369,368" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelSetRangeColor Color="[System.Drawing.Color.LightYellow]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="327,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_6" Range="[&quot;A&quot;+IntCount.ToString+&quot;:H&quot; + IntCount.ToString]" SheetName="Sheet1" />
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="327,51" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,145" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,333.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="333.6,84.8" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                              <ui:WriteCell Cell="[&quot;C&quot; + IntCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="Sheet1" Text="Receivable" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="1239,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[IntCount+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap:VirtualizedContainerService.HintSize="735,60" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">1</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="735,472" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence sap:VirtualizedContainerService.HintSize="376,307" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:WriteCell Cell="[&quot;A&quot; + (IntCount+1).ToString]" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="[IntCount.ToString]" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" />
          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[IntCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[IntCount+1]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="IntCount &lt;= dtFinal.Rows.Count" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
    <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayName="Excel Scope" FilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="735,256" sap2010:WorkflowViewState.IdRef="ExcelScope_1" Visible="False">
      <bem:ExcelScope.Body>
        <ActivityAction x:TypeArguments="bem:ExcelParam">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <bes1:SetBorder BorderColor="{x:Null}" Output="{x:Null}" BorderWeight="1" CellRange="[&quot;A1:H&quot; + (dtFinal.Rows.Count+1).ToString]" ContinueOnError="False" Delay="3" DisplayName="Set Border" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="SetBorder_1" LineStyle="xlLineStyleNone" Presets="AllBorder" SheetName="Sheet1" />
          </Sequence>
        </ActivityAction>
      </bem:ExcelScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </bem:ExcelScope>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="735,386" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="326,277" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows" sap:VirtualizedContainerService.HintSize="284,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_1" Mode="Add" NoRows="1" Position="1" SheetName="Sheet1" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <bem1:MergeCells ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" CellText="[&quot;Bank Balance Report as at &quot;+ strDateAndTime + &quot; AM&quot;]" ContinueOnError="False" Delay="3" DisplayName="Merge Cells" FilePath="[strDataFolderPath + strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="735,70" HorizontalAlignment="Center" sap2010:WorkflowViewState.IdRef="MergeCells_1" MergeRange="A1:H1" SheetName="Sheet1" VerticalAlignment="Center" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="FileSystem.Rename(In_strDataFolderPath + In_strDateAndTime + &quot;\&quot; + &quot;Previous Transaction.xlsx&quot;,In_strDataFolderPath + In_strDateAndTime + &quot;\&quot; + &quot;Previous Transaction as at &quot;+In_strFileSaveDate+&quot;.xlsx&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="735,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDataFolderPath">[strDataFolderPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strFileSaveDate">[strFileSaveDate]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="FileSystem.Rename(In_strDataFolderPath + In_strDateAndTime + &quot;\&quot; + &quot;BankDetails.xlsx&quot;,In_strDataFolderPath + In_strDateAndTime + &quot;\&quot; + &quot;Bank Balance Report as at &quot;+In_strFileSaveDate+&quot;.xlsx&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="735,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDataFolderPath">[strDataFolderPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strDateAndTime">[strDateAndTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_strFileSaveDate">[strFileSaveDate]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <uascw:CompressFiles Password="{x:Null}" CodePage="Default" CompressedFileInfo="[OutFile]" CompressedFileName="[strDataFolderPath + strDateAndTime]" CompressionLevel="Normal" DisplayName="Compress/Zip Files" sap:VirtualizedContainerService.HintSize="735,213" sap2010:WorkflowViewState.IdRef="CompressFiles_1" OverrideExistingFile="True">
      <uascw:CompressFiles.ContentToArchive>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
          <InArgument x:TypeArguments="x:String">[strDataFolderPath + strDateAndTime]</InArgument>
        </scg:List>
      </uascw:CompressFiles.ContentToArchive>
    </uascw:CompressFiles>
    <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Dear All,&quot;+vbCrLf+vbCrLf+ &quot;Please find today (&quot;+ strDate +&quot;) available balances and previous day balances &quot; +vbCrLf+vbCrLf+ &quot;Thanks,&quot; +vbCrLf+ &quot;SLTBot.&quot;]" Cc="[Config(&quot;MailAddress2&quot;).ToString + &quot;;&quot; + Config(&quot;MailAddress3&quot;).ToString + &quot;;&quot; + Config(&quot;MailAddress4&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="735,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="False" IsDraft="False" Subject="Treasury - Daily Get Bank Balances and Collection &amp; Payment Reports" To="[Config(&quot;MailAddress1&quot;).ToString]">
      <ui:SendOutlookMail.Files>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
          <InArgument x:TypeArguments="x:String">[OutFile.FullName]</InArgument>
        </scg:List>
      </ui:SendOutlookMail.Files>
    </ui:SendOutlookMail>
  </Sequence>
</Activity>